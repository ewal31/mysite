export const KaTeX=()=>{let deck,defaultOptions={version:"latest",delimiters:[{left:"$$",right:"$$",display:!0},{left:"$",right:"$",display:!1},{left:"\\(",right:"\\)",display:!1},{left:"\\[",right:"\\]",display:!0}],ignoredTags:["script","noscript","style","textarea","pre"]};const loadScript=src=>new Promise(((resolve,reject)=>{const script=document.createElement("script");script.type="text/javascript",script.onload=resolve,script.onerror=reject,script.src=src,document.head.append(script)}));return{id:"katex",init:function(reveal){deck=reveal;let revealOptions=deck.getConfig().katex||{},options={...defaultOptions,...revealOptions};const{local:local,version:version,extensions:extensions,...katexOptions}=options;let baseUrl=options.local||"https://cdn.jsdelivr.net/npm/katex",versionString=options.local?"":"@"+options.version,cssUrl=baseUrl+versionString+"/dist/katex.min.css",mhchemUrl=baseUrl+versionString+"/dist/contrib/mhchem.min.js",karUrl=baseUrl+versionString+"/dist/contrib/auto-render.min.js",katexScripts=[baseUrl+versionString+"/dist/katex.min.js"];options.extensions&&options.extensions.includes("mhchem")&&katexScripts.push(mhchemUrl),katexScripts.push(karUrl);const renderMath=()=>{renderMathInElement(reveal.getSlidesElement(),katexOptions),deck.layout()};(src=>{let link=document.createElement("link");link.rel="stylesheet",link.href=src,document.head.appendChild(link)})(cssUrl),async function(urls){for(const url of urls)await loadScript(url)}(katexScripts).then((()=>{deck.isReady()?renderMath():deck.on("ready",renderMath.bind(this))}))}}};

import speakerViewHTML from"./speaker-view.html";import{marked}from"marked";const Plugin=()=>{let connectInterval,deck,speakerWindow=null;function openSpeakerWindow(){if(speakerWindow&&!speakerWindow.closed)speakerWindow.focus();else{if(speakerWindow=window.open("about:blank","reveal.js - Notes","width=1100,height=700"),speakerWindow.marked=marked,speakerWindow.document.write(speakerViewHTML),!speakerWindow)return void alert("Speaker view popup failed to open. Please make sure popups are allowed and reopen the speaker view.");!function(){const presentationURL=deck.getConfig().url,url="string"==typeof presentationURL?presentationURL:window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search;connectInterval=setInterval((function(){speakerWindow.postMessage(JSON.stringify({namespace:"reveal-notes",type:"connect",state:deck.getState(),url:url}),"*")}),500),window.addEventListener("message",onPostMessage)}()}}function post(event){let slideElement=deck.getCurrentSlide(),notesElements=slideElement.querySelectorAll("aside.notes"),fragmentElement=slideElement.querySelector(".current-fragment"),messageData={namespace:"reveal-notes",type:"state",notes:"",markdown:!1,whitespace:"normal",state:deck.getState()};if(slideElement.hasAttribute("data-notes")&&(messageData.notes=slideElement.getAttribute("data-notes"),messageData.whitespace="pre-wrap"),fragmentElement){let fragmentNotes=fragmentElement.querySelector("aside.notes");fragmentNotes?(messageData.notes=fragmentNotes.innerHTML,messageData.markdown="string"==typeof fragmentNotes.getAttribute("data-markdown"),notesElements=null):fragmentElement.hasAttribute("data-notes")&&(messageData.notes=fragmentElement.getAttribute("data-notes"),messageData.whitespace="pre-wrap",notesElements=null)}notesElements&&notesElements.length&&(notesElements=Array.from(notesElements).filter((notesElement=>null===notesElement.closest(".fragment"))),messageData.notes=notesElements.map((notesElement=>notesElement.innerHTML)).join("\n"),messageData.markdown=notesElements[0]&&"string"==typeof notesElements[0].getAttribute("data-markdown")),speakerWindow.postMessage(JSON.stringify(messageData),"*")}function onPostMessage(event){if(function(event){try{return window.location.origin===event.source.location.origin}catch(error){return!1}}(event)){let data=JSON.parse(event.data);data&&"reveal-notes"===data.namespace&&"connected"===data.type?(clearInterval(connectInterval),onConnected()):data&&"reveal-notes"===data.namespace&&"call"===data.type&&function(methodName,methodArguments,callId){let result=deck[methodName].apply(deck,methodArguments);speakerWindow.postMessage(JSON.stringify({namespace:"reveal-notes",type:"return",result:result,callId:callId}),"*")}(data.methodName,data.arguments,data.callId)}}function onConnected(){deck.on("slidechanged",post),deck.on("fragmentshown",post),deck.on("fragmenthidden",post),deck.on("overviewhidden",post),deck.on("overviewshown",post),deck.on("paused",post),deck.on("resumed",post),post()}return{id:"notes",init:function(reveal){deck=reveal,/receiver/i.test(window.location.search)||(null!==window.location.search.match(/(\?|\&)notes/gi)?openSpeakerWindow():window.addEventListener("message",(event=>{if(!speakerWindow&&"string"==typeof event.data){let data;try{data=JSON.parse(event.data)}catch(error){}data&&"reveal-notes"===data.namespace&&"heartbeat"===data.type&&(reconnectWindow=event.source,speakerWindow&&!speakerWindow.closed?speakerWindow.focus():(speakerWindow=reconnectWindow,window.addEventListener("message",onPostMessage),onConnected()))}var reconnectWindow})),deck.addKeyBinding({keyCode:83,key:"S",description:"Speaker notes view"},(function(){openSpeakerWindow()})))},open:openSpeakerWindow}};export default Plugin;
